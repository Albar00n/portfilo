import"./style.css";import*as THREE from"three";import*as dat from"dat.gui";const loader=new THREE.TextureLoader,height=loader.load("6.jpeg"),texture=loader.load("texture.jpg"),alpha=loader.load("39609.jpg"),gui=new dat.GUI,canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,geometry=new THREE.PlaneBufferGeometry(7,5,64,64),materials=new THREE.MeshStandardMaterial({color:"white",map:texture,displacementMap:height,displacementScale:.11,alphaMap:alpha,transparent:!0,depthTest:!1}),plane=new THREE.Mesh(geometry,materials);scene.add(plane),plane.rotation.x=101,gui.add(plane.rotation,"x").min(0).max(600);const pointLight=new THREE.PointLight("#52af52",2);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight),gui.add(pointLight.position,"x"),gui.add(pointLight.position,"y"),gui.add(pointLight.position,"z");const col={color:"#00ff00"};gui.addColor(col,"color").onChange((()=>{pointLight.color.set(col.color)}));const sizes={width:1*window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=1,camera.position.y=1,camera.position.z=3,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.addEventListener("mousemove",animateTerrain);let mouseY=0;function animateTerrain(e){mouseY=e.clientY}const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime();plane.rotation.z=.1*e,plane.material.displacementScale=.1+.005*mouseY,renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();